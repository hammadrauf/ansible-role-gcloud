---
- name: Assert input
  ansible.builtin.assert:
    that:
      - gcloud_state in ['present', 'absent']
      - ansible_architecture in gcloud_supported_architecture
      - gcloud_additional_components | difference(gcloud_supported_components) | length == 0

- name: Present
  when: gcloud_state == 'present'
  block:
    - name: Set url
      ansible.builtin.set_fact:
        url: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-linux-{{ gcloud_supported_architecture[ansible_architecture] }}.tar.gz
        arg_components: "{{ ('--additional-components ' + gcloud_additional_components | join(' ')) if gcloud_additional_components | length > 0 else '' }}"

    - name: Check installation directory
      ansible.builtin.stat:
        path: "{{ gcloud_install_dir }}"
      register: install_dir

    - name: Create installation directory
      when: not install_dir.stat.exists
      ansible.builtin.file:
        path: "{{ gcloud_install_dir }}"
        state: directory
        mode: 0755

    - name: Download archive {{ url }}
      ansible.builtin.get_url:
        url: "{{ url }}"
        dest: "/tmp/{{ url | basename }}"
        mode: 0644

    - name: Extract archive
      ansible.builtin.unarchive:
        src: "/tmp/{{ url | basename }}"
        dest: "{{ gcloud_install_dir }}"
        remote_src: true
        mode: 0755
      args:
        creates: "{{ gcloud_install_dir }}/google-cloud-sdk"

    - name: Install
      ansible.builtin.command:
        cmd: "{{ gcloud_install_dir }}/google-cloud-sdk/install.sh --quiet {{ arg_components }}"
      register: res
      changed_when: '"Update done!" in res.stdout'

- name: Absent
  when: gcloud_state == 'absent'
  block:
    - name: Remove gcloud SDK
      ansible.builtin.file:
        path: "{{ gcloud_install_dir }}/google-cloud-sdk"
        state: absent

- name: Setup path and completion
  ansible.builtin.include_tasks:
    file: path.yml
  loop:
    - name: fish
      path: "{{ gcloud_fish_config }}"
    - name: bash
      path: "{{ gcloud_bash_config }}"
    - name: zsh
      path: "{{ gcloud_zsh_config }}"
